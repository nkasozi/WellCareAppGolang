# This file is a template, and might need editing before it works on your project.
image: golang:latest

variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab.com/capslock-ltd/reconciler/backend-golang

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p /app/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR /app/src/$REPO_NAME
  - cd /app/src/$REPO_NAME
  

stages:
  - integrationtests
  - build
  - deploy

tests:
  stage: integrationtests
  script:
    - go mod download
    - go test -v ./integrationtests/...

compile:
  stage: build
  script:
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/mybinary
  artifacts:
    paths:
      - mybinary

deploy:
  stage: deploy
  image: google/cloud-sdk
  services:
    - docker:dind
  script:
    - echo $GCP_SERVICE_KEY > gcloud-service-key.json # Google Cloud service accounts
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $GCP_PROJECT_ID 
    - gcloud builds submit --tag gcr.io/reconcilercore/go-reconciler
    - gcloud run deploy go-reconciler --image gcr.io/reconcilercore/go-reconciler:latest --platform managed --allow-unauthenticated --region us-central1
